{"version":3,"sources":["node_modules/browser-pack/_prelude.js","browser.js","src/capture-stack-client.js","src/errors.js","src/errors/auth-error.js","src/errors/dev-error.js","src/errors/not-found-error.js","src/errors/notify-user.js","src/errors/service-error.js","src/errors/user-error.js","src/inherits-client.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Errors","exportFn","ErrorsBase","captureStackTrace","inst","stack","name","message","safe_message","SuperErrors","fn","apply","this","arguments","setSuperErrorsFn","error_fn","setFn","add","addError","create","createSuperError","getCustomStack","rebase","rebaseError","base","field","err","throwing","errors","undefined","generic","indexOf","push","fields","constructor","default_message","status_code","client_safe_messages","inherits","prototype","client_safe_message","isGeneric","setGeneric","init","initError","type","__sub","Array","isArray","getErrorStack","from","additional","getSubStack","JSON","stringify","super_stack","error_stack","prefix","substack","replace","LINE_RETURNS","error_from","Object","defineProperty","get","enumerable","configurable","value","old_base","new_base","concat","exportsFn","AuthError","from_error","DevError","NotFoundError","NotifyUser","ServiceError","UserError","inheritsFromError","parent","super_","writable"],"mappings":"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","file":"super-errors.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\r\n\r\n// base\r\nvar Errors = module.exports = require('./src/errors.js')();\r\n\r\n// inherits from Error\r\nrequire('./src/inherits-client.js')(Errors);\r\nrequire('./src/capture-stack-client.js')(Errors);\r\n\r\n// default classes\r\nrequire('./src/errors/auth-error.js')(Errors);\r\nrequire('./src/errors/dev-error.js')(Errors);\r\nrequire('./src/errors/not-found-error.js')(Errors);\r\nrequire('./src/errors/notify-user.js')(Errors);\r\nrequire('./src/errors/service-error.js')(Errors);\r\nrequire('./src/errors/user-error.js')(Errors);","\"use strict\";\n\nmodule.exports = exportFn;\n\nfunction exportFn(ErrorsBase){\n    ErrorsBase.captureStackTrace = captureStackTrace;\n}\n\nfunction captureStackTrace(inst){\n    // going to get the stack trace of an error\n    inst.stack = (new Error(\"\" + (inst.name ? inst.name + ': ' : '') + (inst.message || inst.safe_message))).stack;\n}","\"use strict\";\n\nmodule.exports = exportFn;\n\nvar LINE_RETURNS = /(\\r\\n|\\r|\\n)/g;\n\nfunction exportFn(){\n    var fn;\n    \n    /**\n     * Main export is a function that can be overridden by using setFn()\n     */\n    function SuperErrors(){\n        if(typeof fn === 'function'){\n            return fn.apply(this, arguments);\n        }\n    }\n    \n    /**\n     * Pass a function to set the behavior of the SuperErrors function\n     * @param {function} error_fn - function to be called when SuperErrors() is called\n     */\n    function setSuperErrorsFn(error_fn){\n        fn = error_fn;\n    }\n    \n    SuperErrors.setFn = setSuperErrorsFn;\n    SuperErrors.add = addError;\n    SuperErrors.create = createSuperError;\n    SuperErrors.stack = getCustomStack;\n    SuperErrors.rebase = rebaseError;\n    \n    return SuperErrors;\n}\n\n/**\n * Call to add an error to a base error.\n * @param {Error} base - the base error\n * @param {string} [field] - the field that this error was a result of\n * @param {Error} err - the error that occurred\n */\nfunction addError(base, field, err){\n    // field is optional\n    if(arguments.length === 2){\n        err = field;\n        field = err.field;\n    }\n    \n    if(base === err){\n        return base;\n    }\n    \n    if(!base || typeof base !== 'object'){\n        var throwing = new Error('Cannot add error to non object');\n        throwing.errors = [err];\n        throw throwing;\n    }\n    \n    var f;\n    \n    if(field === undefined){\n        if(!err.generic){\n            if(base.generic){\n                return rebaseError(base, err);\n            } else {\n                if(!base.errors){\n                    base.errors = [err];\n                } else {\n                    if(!~base.errors.indexOf(err)){\n                        base.errors.push(err);\n                    }\n                }\n            }\n        }\n        \n        if(err.errors){\n            for(f = 0; f < err.errors.length; f++){\n                base = addError(base, err.errors[f]);\n            }\n        }\n        \n        if(err.fields){\n            for(f in err.fields){\n                base = addError(base, f, err.fields[f]);\n            }\n        }\n    } else {\n        if(!base.fields){\n            base.fields = {};\n        }\n        \n        if(base.fields[field]){\n            if(!err.generic && base.fields[field].generic){\n                base.fields[field] = rebaseError(base.fields[field], err);\n            } else {\n                base.fields[field] = addError(base.fields[field], err);\n            }\n        } else {\n            base.fields[field] = err;\n        }\n        \n        if(err.fields){\n            for(f in err.fields){\n                base = addError(base, field + '.' + f, err.fields[f]);\n            }\n        }\n    }\n    \n    return base;\n}\n\n/**\n * Create a new Super Error\n * @param {Function} constructor - Constructor function for the error\n * @param {string} name - The error name (ex: AuthError, UserError)\n * @param {string} [default_message=\"There was an error.\"] - The message to display when no message is passed or when custom messages are defined as not client-safe\n * @param {number} [status_code=500] - The recommended HTTP status code to return to the user\n * @param {boolean} [client_safe_messages=false] - Whether or not messages should be sent back to the user or just the default message\n * @returns {Function}\n */\nfunction createSuperError(constructor, name, default_message, status_code, client_safe_messages){\n    /*jshint validthis:true */\n    \n    // optional default message\n    if(typeof default_message === 'number' || typeof default_message === 'boolean'){\n        client_safe_messages = status_code;\n        status_code = default_message;\n        default_message = undefined;\n    }\n    \n    // optional status code\n    if(typeof status_code === 'boolean'){\n        client_safe_messages = status_code;\n        status_code = undefined;\n    }\n    \n    // inheritance supported?\n    if(this.inherits){\n        this.inherits(constructor, Error);\n    }\n    \n    // store on SuperErrors instance\n    this[name] = constructor;\n    \n    // set default message\n    default_message = default_message || 'There was an error.';\n    \n    // save default values\n    constructor.prototype.name = name;\n    constructor.prototype.message = default_message;\n    constructor.prototype.client_safe_message = default_message;\n    constructor.prototype.status_code = (status_code && typeof status_code === 'number' ? status_code : 500);\n    constructor.prototype.isGeneric = setGeneric;\n    constructor.prototype.init = initError;\n    \n    // add super errors to the constructor\n    constructor.SuperErrors = this;\n    constructor.client_safe_messages = (client_safe_messages ? true : false);\n    \n    return constructor;\n}\n\n/**\n * Will return a stack with additional info, fields, and errors that are attached to this error\n * @param {Error} err - The error to get the stack from\n * @param {boolean} [type=true] - Whether to include custom data in stack\n * @param {boolean|string} [__sub=true] - Internal. Whether to include sub errors in stack\n * @returns {string}\n */\nfunction getCustomStack(err, type, __sub){\n    /*jshint validthis:true */\n    \n    if(Array.isArray(err) && err.length > 0){\n        err = {\n            name: 'Array',\n            message: '',\n            errors: err\n        };\n    }\n    \n    var stack = getErrorStack(err);\n    \n    if(type === false){\n        return stack;\n    }\n    \n    if(err && (err.from || err.additional || (__sub !== false && (err.errors || err.fields)))){\n        stack += '\\n    ---';\n        \n        if(err.additional){\n            try {\n                stack += getSubStack('additional info', JSON.stringify(err.additional, null, '    '));\n            } catch(err){\n                stack += getSubStack('additional info error', err.message);\n            }\n        }\n    \n        if(err.from){\n            stack += getSubStack('from', this.stack(err.from, true, false));\n        }\n        \n        if(__sub !== false){\n            if(err.errors && Array.isArray(err.errors)){\n                for(var i = 0; i < err.errors.length; i++){\n                    stack += getSubStack('additional error', this.stack(err.errors[i], true, false));\n                }\n            }\n            \n            if(__sub !== 'addl' && err.fields && typeof err.fields === 'object'){\n                for(var field in err.fields){\n                    stack += getSubStack(field, this.stack(err.fields[field], true, 'addl'));\n                }\n            }\n        }\n    }\n    \n    return stack;\n}\n\n/**\n * Gets the stack of the error value\n * @param {Error} err - The error value to get the stack from\n * @returns {string}\n */\nfunction getErrorStack(err){\n    var stack;\n    \n    if(!err || typeof err !== 'object' || Array.isArray(err)){\n        try {\n            if(err === undefined){\n                err = 'undefined';\n            }\n            else if(typeof err === 'function'){\n                err = '[function]';\n            } else {\n                err = JSON.stringify(err);\n            }\n        } catch(e){\n            /* istanbul ignore next */\n            err = '' + err;\n        }\n        err = { name:'UnknownError', message: '' + err + '.' };\n    }\n    \n    if(!err.super_stack){\n        stack = err.stack;\n    } else {\n        stack = err.error_stack;\n    }\n    \n    if(!stack){\n        stack = (err.name ? err.name + ': ' : 'UnknownError: ');\n        if('message' in err){\n            stack += err.message;\n        } else {\n            try {\n                stack += JSON.stringify(err) + '.';\n            } catch(e){\n                stack += '' + err + '.';\n            }\n        }\n    }\n    \n    return stack;\n}\n\n/**\n * Indents a substack string\n * @param {string} prefix - The substack title\n * @param {string} stack - The substack\n * @returns {string}\n */\nfunction getSubStack(prefix, stack){\n    var substack = '\\n' + prefix + ': ' + stack;\n    return substack.replace(LINE_RETURNS, '\\n    ');\n}\n\n/**\n * Initialize an error based on arguments passed\n * @param {Function} constructor - Error constructor to use\n * @param {string} [message] - Error message\n * @param {*} [additional] - Additional information to be attached to the error\n * @param {Error} [error_from] - Error we want to wrap with our SuperError\n * @param {string} [field] - Field we want this error to be associated with\n */\nfunction initError(constructor, message, additional, error_from, field){\n    /*jshint validthis:true */\n    var inst = this;\n    var SuperErrors = constructor.SuperErrors;\n    \n    // optional additional information\n    if(additional instanceof Error){\n        field = error_from;\n        error_from = additional;\n        additional = undefined;\n    }\n    \n    // optional error_from\n    else if(typeof error_from === 'string'){\n        field = error_from;\n        error_from = undefined;\n    }\n    \n    if(message){\n        this.message = '' + message;\n        \n        if(constructor.client_safe_messages){\n            this.client_safe_message = '' + message;\n        }\n    }\n    \n    if(error_from){\n        this.from = error_from;\n    }\n    \n    if(additional !== undefined && additional !== null){\n        this.additional = additional;\n    }\n    \n    if(field && typeof field === 'string'){\n        this.field = field;\n    }\n    \n    if(SuperErrors && SuperErrors.captureStackTrace){\n        SuperErrors.captureStackTrace(this, constructor);\n        this.error_stack = this.stack;\n    }\n    \n    Object.defineProperty(this, 'stack', {\n        get: function(){\n            return SuperErrors.stack(inst);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(this, 'super_stack', {\n        value: true,\n        enumerable: false,\n        configurable: true\n    });\n    \n    return this;\n}\n\n/**\n * Set a new error as the base error and attach the existing base error to the new base\n * @param {Error} old_base - The old base error\n * @param {Error} new_base - The new base error\n * @returns {Error}\n */\nfunction rebaseError(old_base, new_base){\n    // strip the errors and fields\n    var errors, fields, field;\n    \n    if(new_base.errors){\n        errors = new_base.errors;\n        delete new_base.errors;\n    }\n    \n    if(new_base.fields){\n        fields = new_base.fields;\n        delete new_base.fields;\n    }\n    \n    new_base = addError(new_base, old_base);\n    \n    // now add the errors back\n    if(errors){\n        new_base.errors = new_base.errors.concat(errors);\n    }\n    \n    // and add the fields back\n    if(fields){\n        for(field in fields){\n            new_base = addError(new_base, field, fields[field]);\n        }\n    }\n    \n    return new_base;\n}\n\n/**\n * Chainable function to be attached to all SuperErrors\n * @param {boolean} [value=true] - Whether or the Error is generic\n * @returns {Error}\n */\nfunction setGeneric(value){\n    /* jshint validthis:true */\n    this.generic = (value !== false);\n    return this;\n}","\"use strict\";\n\nmodule.exports = exportsFn;\n\nfunction exportsFn(SuperErrors){\n    \n    function AuthError(message, additional, from_error, field){\n        this.init(AuthError, message, additional, from_error, field);\n    }\n    \n    SuperErrors.create(AuthError, 'AuthError', 'Authorization required.', 401, true);\n}","\"use strict\";\n\nmodule.exports = exportsFn;\n\nfunction exportsFn(SuperErrors){\n    \n    function DevError(message, additional, from_error, field){\n        return this.init(DevError, message, additional, from_error, field);\n    }\n    \n    SuperErrors.create(DevError, 'DevError', 'Bad setup on server.', 500);\n}","\"use strict\";\n\nmodule.exports = exportsFn;\n\nfunction exportsFn(SuperErrors){\n    \n    function NotFoundError(message, additional, from_error, field){\n        return this.init(NotFoundError, message, additional, from_error, field);\n    }\n    \n    SuperErrors.create(NotFoundError, 'NotFoundError', 'Not found.', 404, true);\n}","\"use strict\";\n\nmodule.exports = exportsFn;\n\nfunction exportsFn(SuperErrors){\n    \n    function NotifyUser(message, additional, from_error, field){\n        return this.init(NotifyUser, message, additional, from_error, field);\n    }\n    \n    SuperErrors.create(NotifyUser, 'NotifyUser', 'A server error occurred.', 500, true);\n}","\"use strict\";\n\nmodule.exports = exportsFn;\n\nfunction exportsFn(SuperErrors){\n    \n    function ServiceError(message, additional, from_error, field){\n        return this.init(ServiceError, message, additional, from_error, field);\n    }\n    \n    SuperErrors.create(ServiceError, 'ServiceError', 'Error from service providor.', 500, true);\n}","\"use strict\";\n\nmodule.exports = exportsFn;\n\nfunction exportsFn(SuperErrors){\n    \n    function UserError(message, additional, from_error, field){\n        return this.init(UserError, message, additional, from_error, field);\n    }\n    \n    SuperErrors.create(UserError, 'UserError', 'Please check your input.', 400, true);\n}","\"use strict\";\n\nmodule.exports = exportsFn;\n\nfunction exportsFn(ErrorsBase){\n    ErrorsBase.inherits = inheritsFromError;\n}\n\nfunction inheritsFromError(constructor, parent){\n    constructor.super_ = parent;\n    constructor.prototype = Object.create(parent.prototype, {\n        constructor: {\n            value: parent,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n}"]}